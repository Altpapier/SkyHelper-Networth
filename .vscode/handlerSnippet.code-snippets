{
    // Place your SkyHelper-Networth workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }

    /**
     * Calculates and adds the price of the modifier to the item
     * @param {object} item The item data
     * @param {object} prices A prices object generated from the getPrices function
     */
    "HandlerClass": {
        "scope": "javascript,typescript",
        "prefix": "handler",
        "body": [
            "/**",
            " * A handler for ${1:modifierText} on an item.",
            " */",
            "class ${2:Modifier}Handler {",
            "    /**",
            "     * Checks if the handler applies to the item",
            "     * @param {object} item The item data",
            "     * @returns {boolean} Whether the handler applies to the item",
            "     */",
            "    applies(item) {",
            "        return ${3:condition};",
            "    }",
            "",
            "    /**",
            "     * Calculates and adds the price of the modifier to the item",
            "     * @param {object} item The item data",
            "     * @param {object} prices A prices object generated from the getPrices function",
            "     */",
            "    calculate(item, prices) {",
            "        ${4:code}",
            "    }",
            "}",
            "",
            "module.exports = ${2:Modifier}Handler;",
        ],
    },
}
